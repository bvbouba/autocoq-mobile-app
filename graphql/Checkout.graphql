fragment AddressFragment on Address {
  firstName
  lastName
  streetAddress1
  streetAddress2
  phone
  country {
    code
    country
  }
  city
  postalCode
}

fragment DeliveryMethod on ShippingMethod {
  id
  name
  price {
    currency
    amount
  }
  minimumDeliveryDays
  maximumDeliveryDays
}


fragment CheckoutFragment on Checkout {
  id
  token
  voucherCode
  isShippingRequired
  discount {
    currency
    amount
  }
  email
  shippingPrice {
    gross {
      currency
      amount
    }
  }
  deliveryMethod {
    __typename
  }
  shippingMethods {
    ...ShippingMethodFragment
  }
  totalPrice {
    tax {
      currency
      amount
    }
    net {
      currency
      amount
    }
    gross {
      currency
      amount
    }
  }
  subtotalPrice {
    tax {
      currency
      amount
    }
    net {
      currency
      amount
    }
    gross {
      currency
      amount
    }
  }

  billingAddress {
    ...AddressFragment
  }
  shippingAddress {
    ...AddressFragment
  }
  isShippingRequired

  availablePaymentGateways {
    id
    name
    config {
      field
      value
    }
  }
  lines {
    id
    quantity
    requiresShipping
    metadata {
      key
      value
    }
    undiscountedUnitPrice {
      amount
      currency
    }
    undiscountedTotalPrice {
      amount
      currency
    }
    totalPrice {
      currency
      net {
        currency
        amount
      }
      gross {
        currency
        amount
      }
      tax {
        currency
        amount
      }
    }

    variant {
      id
      product {
        id
        name
        thumbnail {
         url 
         alt
        }
        attributes {
          values {
            name
            slug
            value
            boolean
            reference
            plainText
          }
          attribute {
            slug
          }
        }
        media {
          url
        }
        externalReference
      }
      attributes {
        values {
          name
          slug
          value
          boolean
          reference
          plainText
        }
        attribute {
          slug
        }
      }
      sku
      name
      media {
        url
      }
    }
  }
}


fragment CheckoutWithZoneFragment on Checkout {
  ...CheckoutFragment
  availableShippingMethods(zoneName: $zoneName) {
    ...DeliveryMethod
  }
}


mutation CreateCheckout($email: String, $lines: [CheckoutLineInput!]!, $channel: String!) {
  checkoutCreate(input: { channel: $channel, email: $email, lines: $lines }) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      message
      code
    }
  }
}


query CheckoutByToken($checkoutToken: UUID!, $zoneName:String) {
  checkout(token: $checkoutToken) {
    ...CheckoutWithZoneFragment
  }
}


mutation checkoutCreate($channel: String!, $lines: [CheckoutLineInput!]!) {
  checkoutCreate(input: { channel: $channel, lines: $lines }) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}



mutation CheckoutLineUpdate(
  $token: UUID
  $lines: [CheckoutLineUpdateInput!]!
) {
  checkoutLinesUpdate(token: $token, lines: $lines) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}


mutation CheckoutAddProductLine(
  $checkoutToken: UUID!
  $variantId: ID!
) {
  checkoutLinesAdd(token: $checkoutToken, lines: [{ quantity: 1, variantId: $variantId }]) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      message
      code
    }
  }
}



mutation checkoutAddPromoCode($token: UUID!, $promoCode: String!) {
  checkoutAddPromoCode(token: $token, promoCode: $promoCode) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}

mutation checkoutBillingAddressUpdate(
  $token: UUID!
  $billingAddress: AddressInput!
) {
  checkoutBillingAddressUpdate(token: $token, billingAddress: $billingAddress) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
    }
  }
}

mutation checkoutShippingAddressUpdate(
  $token: UUID!
  $shippingAddress: AddressInput!
) {
  checkoutShippingAddressUpdate(token: $token, shippingAddress: $shippingAddress) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
    }
  }
}

mutation checkoutShippingMethodUpdate($token: UUID!, $shippingMethodId: ID!) {
  checkoutShippingMethodUpdate(token: $token, shippingMethodId: $shippingMethodId) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
    }
  }
}

mutation checkoutPaymentCreate($token: UUID!, $paymentInput: PaymentInput!) {
  checkoutPaymentCreate(token: $token,  input: $paymentInput) {
    payment {
      id
      chargeStatus
      gateway
      token
      paymentMethodType
    }
    errors {
      field
      message
    }
  }
}

mutation checkoutComplete($token: UUID!) {
  checkoutComplete(token: $token) {
    order {
      id
      userEmail
      created
    }
    confirmationNeeded
    confirmationData
    errors {
      field
      message
      code
    }
  }
}


mutation checkoutEmailUpdate($token: UUID!, $email: String!) {
  checkoutEmailUpdate(token: $token, email: $email) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}



mutation RemoveProductFromCheckout(
  $checkoutToken: UUID!
  $lineId: ID!
) {
  checkoutLineDelete(token: $checkoutToken, lineId: $lineId) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      message
    }
  }
}
